/*! \page page_example_scripts Examples
\b Examples:

1. \ref dump_dcd "1D Ferromagnetic Chain" - demonstrates \link hoomd_script.dump.dcd dump.dcd\endlink<br>
    <i>write a file which can be viewed in visualization
    software such as VMD</i>\n
    \n
2. \ref analyze_imd "1D Antiferromagnetic Chain" - demonstrates \link hoomd_script.analyze.imd analyze.imd\endlink<br>
    <i>use VMD to view a running simulation update in real time</i>\n
    \n
3. \ref create_random_polymers "2D Villain Model" - demonstrates \link hoomd_script.init.create_random_polymers init.create_random_polymers\endlink<br>
    <i>initialize a random system of polymers given configurable parameters</i>\n
    \n
4. \ref init_xml "Spin waves in MnF2" - demonstrates \link hoomd_script.init.read_xml init.read_xml\endlink<br>
    <i>initialize a system with any configuration from a file</i>\n
    \n
5. \ref box_resize "Spin Waves in YFeO3" - demonstrates \link hoomd_script.update.box_resize update.box_resize\endlink<br>
    <i>slowly change the simulation box dimensions</i>\n
    \n
6. \ref box_resize_rigid "Spin Waves in MnV2O4" - demonstrates \link hoomd_script.update.box_resize update.box_resize\endlink<br>
    <i>behavior of update.box_resize with rigid bodies in the system</i>\n
    \n
*/

/*! \example dump_dcd
This simple example is an adaptation of the quick start script. It performs a simulation of a Lennard-Jones liquid,
dumping snapshots of the system every 100 time steps.

To run this example, copy the examples directory from share/hoomd/examples your hoomd installation directory.
\code
cp -R HOOMD-INSTALL-DIR/share/hoomd/examples ~/hoomd-examples
cd ~/hoomd-examples
\endcode

Then run:
\code
$ hoomd -x dump_dcd
\endcode

Running this quick simulation will result in two output files being generated
in the current working directory: \c dump_dcd.xml and \c dump_dcd.dcd. The
\c .xml file generated by \link hoomd_script.dump.xml dump.xml \endlink
contains the particle names and coordinates at time step 0. If there were
any bonds specified, they would be included too. VMD or other applications
can read in the \c .xml to obtain this information.

\c dump.dcd includes snapshots of the system state (particle position
coordinates only) written every 100 time steps. This file can be loaded into
visualization software such as VMD and played as a movie or read for
analysis purposes.

If you have VMD installed, you can load up the entire simulation trajectory
by running
\code
$ vmd -hoomd dump_dcd.xml dump_dcd.dcd
\endcode
on the command line or by loading these files using VMD's GUI. For the best
visualization, open VMD's <i>Graphical Representation</i> menu and set the
<i>Drawing Method</i> to VDW.

<hr>

*/

/*! \example analyze_imd
Here is the same simulation as \ref dump_dcd, this time configured for real-time display in VMD using the IMD
interface.

To run this example, copy the examples directory from share/hoomd/examples your hoomd installation directory.
\code
cp -R HOOMD-INSTALL-DIR/share/hoomd/examples ~/hoomd-examples
cd ~/hoomd-examples
\endcode

Then run:
\code
$ hoomd -x analyze_imd
\endcode

The simulation is now running in hoomd (you may get a prompt from your firewall asking if hoomd is allowed to act as
a server, allow it). In another terminal, cd into the examples directory and load the initial configuration in vmd:
\code
$ vmd -hoomd analyze_imd.xml
\endcode

Then go to the VMD command window and run the command
\code
imd connect localhost 54321
\endcode
The particles in the display window should begin moving. The display
is of the current state of the simulation, updated in \b real-time.
The best visualization is obtained by setting the <i>Drawing Method</i> to VDW in
VMD's <i>Graphical Representation</i> menu.

Switch back to the terminal where hoomd is running and press CTRL-C to kill the
simulation. It is set to run for an extremely long time on purpose to allow
ample time to launch VMD and issue the \c imd command.

<hr>
*/

/*! \example create_random_polymers
Here is a script that generates a system of bead-spring polymers that self-assemble
into a hex phase when run for a few million time steps. The polymers are A6B7A6 block copolymers
in an implicit solvent. The script also shows a few examples of how writing python
code in the script can be handy: here the concentration \c phi_P is a parameter and
math operations are performed to calculate the length of the box.

For more information on the model in this script, see<br>
"Micellar crystals in solution from molecular dynamics simulations"<br>
J. Chem. Phys. \b 128, 184906 (2008); DOI:10.1063/1.2913522<br>
http://link.aip.org/link/?JCPSA6/128/184906/1

Any of the polymer systems in the paper could be easily run just by changing a few parameters in
this script.

To run this example, copy the examples directory from share/hoomd/examples your hoomd installation directory.
\code
cp -R HOOMD-INSTALL-DIR/share/hoomd/examples ~/hoomd-examples
cd ~/hoomd-examples
\endcode

Then run:
\code
$ hoomd -x create_random_polymers
\endcode

The results of this example may be visualized with VMD:
\code
$ vmd -hoomd create_random_polymers.xml create_random_polymers.dcd
\endcode

<hr>

*/

/*! \example init_xml

HOOMD-blue is not limited by its built-in random initial condition generators. You can load in an arbitrary initial
condition from a formatted xml file. Here is a simple example demonstrating most of the types of data that can be
input (see \ref page_xml_file_format for full documentation of this format):

\include init_xml.xml

The initial conditions can be read into a simulation
using the command \link hoomd_script.init.read_xml init.read_xml\endlink as shown in the example script below.

To run this example, copy the examples directory from share/hoomd/examples your hoomd installation directory.
\code
cp -R HOOMD-INSTALL-DIR/share/hoomd/examples ~/hoomd-examples
cd ~/hoomd-examples
\endcode

Then run:
\code
$ hoomd -x init_xml
\endcode

The results of this example may be visualized with VMD:
\code
$ vmd -hoomd init_xml.xml init_xml.dcd
\endcode

<hr>

*/

/*! \example box_resize
\link hoomd_script.update.box_resize update.box_resize\endlink can be used to slowly resize the simulation box
dimensions during a run(). To use it, specify a \link hoomd_script.variant variant\endlink mapping time steps to
box lengths and give it to the update.box_resize command. It can optionally rescale all particle coordinates into
the new box, or just leave all particle coordinates alone.

\note An update period of 1 will result in extremely slow simulations (box resizing is performed on the CPU, not
the GPU). Use a slow box resize and a larger update period (i.e. 100) for faster simulations.

To run this example, copy the examples directory from share/hoomd/examples your hoomd installation directory.
\code
cp -R HOOMD-INSTALL-DIR/share/hoomd/examples ~/hoomd-examples
cd ~/hoomd-examples
\endcode

Then run:
\code
$ hoomd -x box_resize
\endcode

The results of this example may be visualized with VMD:
\code
$ vmd -hoomd box_resize.xml box_resize.dcd
\endcode

<hr>
*/

/*! \example box_resize_rigid
\link hoomd_script.update.box_resize update.box_resize\endlink can be used to slowly resize the simulation box
dimensions during a run(). To use it, specify a \link hoomd_script.variant variant\endlink mapping time steps to
box lengths and give it to the update.box_resize command. It operates properly on systems of particles, rigid
bodies, and systems with both. Rigid bodies are handled by scaling (if scaling is enabled) the center of mass
position of each body while keeping the size of the body fixed.

\note An update period of 1 will result in extremely slow simulations (box resizing is performed on the CPU, not
the GPU). Use a slow box resize and a larger update period (i.e. 100) for faster simulations.

To run this example, copy the examples directory from share/hoomd/examples your hoomd installation directory.
\code
cp -R HOOMD-INSTALL-DIR/share/hoomd/examples ~/hoomd-examples
cd ~/hoomd-examples
\endcode

Then run:
\code
$ hoomd -x box_resize_rigid
\endcode

The results of this example may be visualized with VMD:
\code
$ vmd -hoomd box_resize_rigid.xml box_resize_rigid.dcd
\endcode

<hr>

*/
